{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["url","axios","get","then","response","data","person","post","id","put","delete","Filter","filter","setFilter","onChange","e","target","value","PersonForm","props","onSubmit","handleSubmit","nameChange","newName","numberChange","newNumber","type","Persons","persons","removePerson","map","key","name","number","onClick","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setMessage","msgType","setMsgType","useEffect","personService","postMessage","msg","setTimeout","shownPersons","toLowerCase","includes","event","preventDefault","find","alert","window","confirm","success","catch","error","console","log","finally","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ab53fd6.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst url = '/api/persons'\r\n\r\nconst getAll = () => axios.get(url).then(response => response.data)\r\nconst create = person => axios.post(url, person).then(response => response.data)\r\nconst update = (id, person) => axios.put(`${url}/${id}`, person).then(response => response.data)\r\nconst remove = (id) => axios.delete(`${url}/${id}`).then(response => response.data)\r\n\r\nexport default {getAll, create, update, remove} ","import React from 'react'\r\n\r\nconst Filter = ({filter, setFilter})  => {\r\n  return (\r\n    <div>\r\n      filter shown with <input onChange={(e)=>setFilter(e.target.value)} value={filter} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        name: <input onChange={props.nameChange} value={props.newName}/>\r\n      </div>\r\n      <div>\r\n        number: <input onChange={props.numberChange} value={props.newNumber}/>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = ({persons, removePerson}) => {\r\n  return (\r\n    <div>\r\n      {persons.map(person => (\r\n        <div key={person.name}>\r\n          {person.name} {person.number} {}\r\n          <button onClick={(e)=>removePerson(e, person)}>delete</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({ message, type }) => {\r\n\r\n  if ( message === null ) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={type}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport personService from './services/persons'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n\r\n  const [ persons,    setPersons    ] = useState([])\r\n  const [ newName,    setNewName    ] = useState('')\r\n  const [ newNumber,  setNewNumber  ] = useState('')\r\n  const [ filter,     setFilter     ] = useState('')\r\n  const [ message,    setMessage    ] = useState(null)\r\n  const [ msgType,    setMsgType    ] = useState('success')\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(response => {\r\n        setPersons(response)\r\n      })\r\n  }, [])\r\n\r\n  const nameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const numberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const personExists = (name) => {\r\n    return persons.find(person=>person.name===name)\r\n  }\r\n\r\n  const postMessage = (msg) => {\r\n    const type = 'success' in msg ? 'success' : 'error'\r\n    setMessage(msg[type])\r\n    setMsgType(type)\r\n    setTimeout(()=>setMessage(null), 3000)\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    if (newName === '') return\r\n    const person = personExists(newName)\r\n    if (person) {\r\n      if (person.number === newNumber) {\r\n        alert(`${newName}: ${newNumber} is already on the list`)\r\n      } else {\r\n        if (window.confirm(`${person.name} is already on the list. Modify the phone number?`)) {\r\n          personService.update(person.id, { name: newName, number: newNumber })\r\n          .then(() => {\r\n            postMessage({ success: `${person.name} phone number is successfully modified.`} )\r\n          })\r\n          .catch( error => {\r\n            console.log(error.response.data)\r\n            postMessage(error.response.data)\r\n          })\r\n          .finally(() => {\r\n            personService\r\n              .getAll()\r\n              .then(response => {\r\n                setPersons(response)\r\n              })\r\n          })\r\n        }\r\n        \r\n      }\r\n    } else {\r\n      personService.create({ name: newName, number: newNumber })\r\n        .then( response => {\r\n          setPersons(persons.concat(response))\r\n          postMessage({ success: `${response.name} is successfully added to the list.` })\r\n        })\r\n        .catch( error => {\r\n          postMessage(error.response.data)\r\n        })\r\n    }\r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n  const removePerson = (event, person) => {\r\n    event.preventDefault()\r\n    if (window.confirm(`Delete ${person.name}?`)) {\r\n      personService.remove(person.id)\r\n      .then(() => {\r\n        personService\r\n          .getAll()\r\n          .then(response => {\r\n            setPersons(response)\r\n          })\r\n      })\r\n    }\r\n  }\r\n\r\n  const shownPersons = filter === '' ?\r\n        persons : \r\n        persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} type={msgType} />\r\n      <Filter filter={filter} setFilter={setFilter} />\r\n      <h2>add a new</h2>\r\n      <PersonForm \r\n        newName={newName} nameChange={nameChange} \r\n        newNumber={newNumber} numberChange={numberChange} \r\n        handleSubmit={handleSubmit} \r\n      />\r\n      <h2>Numbers</h2>\r\n      <Persons persons={shownPersons} removePerson={removePerson} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}